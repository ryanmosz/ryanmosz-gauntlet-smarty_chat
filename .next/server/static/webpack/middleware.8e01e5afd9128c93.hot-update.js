"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("middleware",{

/***/ "(middleware)/./middleware.ts":
/*!***********************!*\
  !*** ./middleware.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(middleware)/./node_modules/next/dist/esm/api/server.js\");\n\n// In-memory store for rate limiting\nconst rateLimit = new Map();\n// Rate limit configuration\nconst RATE_LIMIT_MAX = process.env.RATE_LIMIT_MAX ? parseInt(process.env.RATE_LIMIT_MAX) : 100;\nconst RATE_LIMIT_WINDOW_MS = process.env.RATE_LIMIT_WINDOW_MS ? parseInt(process.env.RATE_LIMIT_WINDOW_MS) : 60000;\nasync function middleware(request) {\n    const response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.next();\n    // Add security headers\n    response.headers.set(\"X-DNS-Prefetch-Control\", \"on\");\n    response.headers.set(\"Strict-Transport-Security\", \"max-age=63072000; includeSubDomains; preload\");\n    response.headers.set(\"X-XSS-Protection\", \"1; mode=block\");\n    response.headers.set(\"X-Frame-Options\", \"SAMEORIGIN\");\n    response.headers.set(\"X-Content-Type-Options\", \"nosniff\");\n    response.headers.set(\"Referrer-Policy\", \"origin-when-cross-origin\");\n    // Handle CORS for API routes\n    if (request.nextUrl.pathname.startsWith(\"/api\")) {\n        const origin = request.headers.get(\"origin\");\n        const allowedOrigins = process.env.CORS_ORIGINS?.split(\",\") || [];\n        if (origin && allowedOrigins.includes(origin)) {\n            response.headers.set(\"Access-Control-Allow-Origin\", origin);\n            response.headers.set(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, OPTIONS\");\n            response.headers.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\n            response.headers.set(\"Access-Control-Max-Age\", \"86400\");\n        }\n        // Handle rate limiting for API routes\n        const ip = request.ip || \"unknown\";\n        const now = Date.now();\n        const rateData = rateLimit.get(ip);\n        if (rateData) {\n            if (now > rateData.resetTime) {\n                // Reset rate limit\n                rateLimit.set(ip, {\n                    count: 1,\n                    resetTime: now + RATE_LIMIT_WINDOW_MS\n                });\n            } else if (rateData.count >= RATE_LIMIT_MAX) {\n                // Rate limit exceeded\n                return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(JSON.stringify({\n                    error: \"Too many requests\",\n                    code: \"RATE_LIMIT_EXCEEDED\"\n                }), {\n                    status: 429,\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    }\n                });\n            } else {\n                // Increment request count\n                rateLimit.set(ip, {\n                    count: rateData.count + 1,\n                    resetTime: rateData.resetTime\n                });\n            }\n        } else {\n            // First request from this IP\n            rateLimit.set(ip, {\n                count: 1,\n                resetTime: now + RATE_LIMIT_WINDOW_MS\n            });\n        }\n        // Add rate limit headers\n        const currentLimit = rateLimit.get(ip);\n        if (currentLimit) {\n            response.headers.set(\"X-RateLimit-Limit\", RATE_LIMIT_MAX.toString());\n            response.headers.set(\"X-RateLimit-Remaining\", (RATE_LIMIT_MAX - currentLimit.count).toString());\n            response.headers.set(\"X-RateLimit-Reset\", currentLimit.resetTime.toString());\n        }\n    }\n    return response;\n}\nconst config = {\n    matcher: [\n        \"/api/:path*\",\n        \"/((?!_next/static|_next/image|favicon.ico).*)\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFHLENBQUMseUJBQXlCLENBQUNWLGlCQUFpQitCLGFBQWFOLEtBQUssRUFBRU8sUUFBUTtZQUM1RnpCLFNBQVNFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHFCQUFxQnFCLGFBQWFQLFNBQVMsQ0FBQ1EsUUFBUTtRQUMzRTtJQUNGO0lBRUEsT0FBT3pCO0FBQ1Q7QUFFTyxNQUFNMEIsU0FBUztJQUNwQkMsU0FBUztRQUNQO1FBQ0E7S0FDRDtBQUNILEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbWlkZGxld2FyZS50cz80MjJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuaW1wb3J0IHR5cGUgeyBOZXh0UmVxdWVzdCB9IGZyb20gJ25leHQvc2VydmVyJ1xuXG4vLyBJbi1tZW1vcnkgc3RvcmUgZm9yIHJhdGUgbGltaXRpbmdcbmNvbnN0IHJhdGVMaW1pdCA9IG5ldyBNYXA8c3RyaW5nLCB7IGNvdW50OiBudW1iZXI7IHJlc2V0VGltZTogbnVtYmVyIH0+KClcblxuLy8gUmF0ZSBsaW1pdCBjb25maWd1cmF0aW9uXG5jb25zdCBSQVRFX0xJTUlUX01BWCA9IHByb2Nlc3MuZW52LlJBVEVfTElNSVRfTUFYID8gcGFyc2VJbnQocHJvY2Vzcy5lbnYuUkFURV9MSU1JVF9NQVgpIDogMTAwXG5jb25zdCBSQVRFX0xJTUlUX1dJTkRPV19NUyA9IHByb2Nlc3MuZW52LlJBVEVfTElNSVRfV0lORE9XX01TID8gcGFyc2VJbnQocHJvY2Vzcy5lbnYuUkFURV9MSU1JVF9XSU5ET1dfTVMpIDogNjAwMDBcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgY29uc3QgcmVzcG9uc2UgPSBOZXh0UmVzcG9uc2UubmV4dCgpXG5cbiAgLy8gQWRkIHNlY3VyaXR5IGhlYWRlcnNcbiAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ1gtRE5TLVByZWZldGNoLUNvbnRyb2wnLCAnb24nKVxuICByZXNwb25zZS5oZWFkZXJzLnNldCgnU3RyaWN0LVRyYW5zcG9ydC1TZWN1cml0eScsICdtYXgtYWdlPTYzMDcyMDAwOyBpbmNsdWRlU3ViRG9tYWluczsgcHJlbG9hZCcpXG4gIHJlc3BvbnNlLmhlYWRlcnMuc2V0KCdYLVhTUy1Qcm90ZWN0aW9uJywgJzE7IG1vZGU9YmxvY2snKVxuICByZXNwb25zZS5oZWFkZXJzLnNldCgnWC1GcmFtZS1PcHRpb25zJywgJ1NBTUVPUklHSU4nKVxuICByZXNwb25zZS5oZWFkZXJzLnNldCgnWC1Db250ZW50LVR5cGUtT3B0aW9ucycsICdub3NuaWZmJylcbiAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ1JlZmVycmVyLVBvbGljeScsICdvcmlnaW4td2hlbi1jcm9zcy1vcmlnaW4nKVxuXG4gIC8vIEhhbmRsZSBDT1JTIGZvciBBUEkgcm91dGVzXG4gIGlmIChyZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWUuc3RhcnRzV2l0aCgnL2FwaScpKSB7XG4gICAgY29uc3Qgb3JpZ2luID0gcmVxdWVzdC5oZWFkZXJzLmdldCgnb3JpZ2luJylcbiAgICBjb25zdCBhbGxvd2VkT3JpZ2lucyA9IHByb2Nlc3MuZW52LkNPUlNfT1JJR0lOUz8uc3BsaXQoJywnKSB8fCBbXVxuXG4gICAgaWYgKG9yaWdpbiAmJiBhbGxvd2VkT3JpZ2lucy5pbmNsdWRlcyhvcmlnaW4pKSB7XG4gICAgICByZXNwb25zZS5oZWFkZXJzLnNldCgnQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgb3JpZ2luKVxuICAgICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnR0VULCBQT1NULCBQVVQsIERFTEVURSwgT1BUSU9OUycpXG4gICAgICByZXNwb25zZS5oZWFkZXJzLnNldCgnQWNjZXNzLUNvbnRyb2wtQWxsb3ctSGVhZGVycycsICdDb250ZW50LVR5cGUsIEF1dGhvcml6YXRpb24nKVxuICAgICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ0FjY2Vzcy1Db250cm9sLU1heC1BZ2UnLCAnODY0MDAnKVxuICAgIH1cblxuICAgIC8vIEhhbmRsZSByYXRlIGxpbWl0aW5nIGZvciBBUEkgcm91dGVzXG4gICAgY29uc3QgaXAgPSByZXF1ZXN0LmlwIHx8ICd1bmtub3duJ1xuICAgIGNvbnN0IG5vdyA9IERhdGUubm93KClcbiAgICBjb25zdCByYXRlRGF0YSA9IHJhdGVMaW1pdC5nZXQoaXApXG5cbiAgICBpZiAocmF0ZURhdGEpIHtcbiAgICAgIGlmIChub3cgPiByYXRlRGF0YS5yZXNldFRpbWUpIHtcbiAgICAgICAgLy8gUmVzZXQgcmF0ZSBsaW1pdFxuICAgICAgICByYXRlTGltaXQuc2V0KGlwLCB7IGNvdW50OiAxLCByZXNldFRpbWU6IG5vdyArIFJBVEVfTElNSVRfV0lORE9XX01TIH0pXG4gICAgICB9IGVsc2UgaWYgKHJhdGVEYXRhLmNvdW50ID49IFJBVEVfTElNSVRfTUFYKSB7XG4gICAgICAgIC8vIFJhdGUgbGltaXQgZXhjZWVkZWRcbiAgICAgICAgcmV0dXJuIG5ldyBOZXh0UmVzcG9uc2UoXG4gICAgICAgICAgSlNPTi5zdHJpbmdpZnkoeyBlcnJvcjogJ1RvbyBtYW55IHJlcXVlc3RzJywgY29kZTogJ1JBVEVfTElNSVRfRVhDRUVERUQnIH0pLFxuICAgICAgICAgIHsgc3RhdHVzOiA0MjksIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9IH1cbiAgICAgICAgKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gSW5jcmVtZW50IHJlcXVlc3QgY291bnRcbiAgICAgICAgcmF0ZUxpbWl0LnNldChpcCwgeyBjb3VudDogcmF0ZURhdGEuY291bnQgKyAxLCByZXNldFRpbWU6IHJhdGVEYXRhLnJlc2V0VGltZSB9KVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBGaXJzdCByZXF1ZXN0IGZyb20gdGhpcyBJUFxuICAgICAgcmF0ZUxpbWl0LnNldChpcCwgeyBjb3VudDogMSwgcmVzZXRUaW1lOiBub3cgKyBSQVRFX0xJTUlUX1dJTkRPV19NUyB9KVxuICAgIH1cblxuICAgIC8vIEFkZCByYXRlIGxpbWl0IGhlYWRlcnNcbiAgICBjb25zdCBjdXJyZW50TGltaXQgPSByYXRlTGltaXQuZ2V0KGlwKVxuICAgIGlmIChjdXJyZW50TGltaXQpIHtcbiAgICAgIHJlc3BvbnNlLmhlYWRlcnMuc2V0KCdYLVJhdGVMaW1pdC1MaW1pdCcsIFJBVEVfTElNSVRfTUFYLnRvU3RyaW5nKCkpXG4gICAgICByZXNwb25zZS5oZWFkZXJzLnNldCgnWC1SYXRlTGltaXQtUmVtYWluaW5nJywgKFJBVEVfTElNSVRfTUFYIC0gY3VycmVudExpbWl0LmNvdW50KS50b1N0cmluZygpKVxuICAgICAgcmVzcG9uc2UuaGVhZGVycy5zZXQoJ1gtUmF0ZUxpbWl0LVJlc2V0JywgY3VycmVudExpbWl0LnJlc2V0VGltZS50b1N0cmluZygpKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXNwb25zZVxufVxuXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBtYXRjaGVyOiBbXG4gICAgJy9hcGkvOnBhdGgqJyxcbiAgICAnLygoPyFfbmV4dC9zdGF0aWN8X25leHQvaW1hZ2V8ZmF2aWNvbi5pY28pLiopJyxcbiAgXSxcbn0gIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsInJhdGVMaW1pdCIsIk1hcCIsIlJBVEVfTElNSVRfTUFYIiwicHJvY2VzcyIsImVudiIsInBhcnNlSW50IiwiUkFURV9MSU1JVF9XSU5ET1dfTVMiLCJtaWRkbGV3YXJlIiwicmVxdWVzdCIsInJlc3BvbnNlIiwibmV4dCIsImhlYWRlcnMiLCJzZXQiLCJuZXh0VXJsIiwicGF0aG5hbWUiLCJzdGFydHNXaXRoIiwib3JpZ2luIiwiZ2V0IiwiYWxsb3dlZE9yaWdpbnMiLCJDT1JTX09SSUdJTlMiLCJzcGxpdCIsImluY2x1ZGVzIiwiaXAiLCJub3ciLCJEYXRlIiwicmF0ZURhdGEiLCJyZXNldFRpbWUiLCJjb3VudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJlcnJvciIsImNvZGUiLCJzdGF0dXMiLCJjdXJyZW50TGltaXQiLCJ0b1N0cmluZyIsImNvbmZpZyIsIm1hdGNoZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./middleware.ts\n");

/***/ })

});